"""
Django settings for upscale project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import dj_database_url
import environ

env = environ.Env(
    DEBUG=(bool, True),
    SECRET_KEY=(str, None),
    DATABASE_URL=(str, None),
    CLOUDINARY_CLOUD_NAME=(str, None),
    CLOUDINARY_API_KEY=(str, None),
    CLOUDINARY_API_SECRET=(str, None),
    PADDLE_CLIENT_SIDE_TOKEN=(str, None),
    PADDLE_WEBHOOK_SECRET=(str, None),
    ADMIN_ALLOWED_IPS=(list, []),
    DJANGO_SUPERUSER_USERNAME=(str,None),
    DJANGO_SUPERUSER_EMAIL=(str,None),
    DJANGO_SUPERUSER_PASSWORD=(str,None)
)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/
env_file = BASE_DIR / ".env"

# Read .env file if it exists
if env_file.exists():
    environ.Env.read_env(env_file)
# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!

DEBUG = env("DEBUG")

ALLOWED_HOSTS = ["*"]

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "users",
    "home",
    "dj_cloudinary",
    "payments",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "users.middleware.AdminIPRestrictionMiddleware",
]

ROOT_URLCONF = "upscale.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "upscale.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

if DEBUG:
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.sqlite3",
            "NAME": BASE_DIR / "db.sqlite3",
        }
    }
else:
    DATABASES = {
        "default": dj_database_url.config(
            default=str(env("DATABASE_URL")),
            conn_max_age=600,
            conn_health_checks=True,
        )
    }


# CLOUDINARY SETTINGS
CLOUDINARY_CLOUD_NAME = env("CLOUDINARY_CLOUD_NAME")
CLOUDINARY_API_KEY = env("CLOUDINARY_API_KEY")
CLOUDINARY_API_SECRET = env("CLOUDINARY_API_SECRET")


# Paddle settings
PADDLE_CLIENT_SIDE_TOKEN = env("PADDLE_CLIENT_SIDE_TOKEN")
PADDLE_WEBHOOK_SECRET = env('PADDLE_WEBHOOK_SECRET')  # You'll need to get this from Paddle dashboard
# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

AUTH_USER_MODEL = "users.CustomUser"
LOGIN_REDIRECT_URL = "/home/dashboard/"
LOGOUT_REDIRECT_URL = "/"
SIGNUP_REDIRECT_URL = "/users/login/"
# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/





LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"
STATICFILES_DIRS = [BASE_DIR / "static"]
STATIC_ROOT = "staticfiles"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


if DEBUG:
    STATICFILES_STORAGE = "django.contrib.staticfiles.storage.StaticFilesStorage"
else:
    STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

SESSION_COOKIE_AGE = 3600  # 1 hour in seconds
if DEBUG:
    CSRF_COOKIE_SECURE = False
    SESSION_COOKIE_SECURE = False
else:
    CSRF_COOKIE_SECURE = True
    SESSION_COOKIE_SECURE = True

# Admin IP restriction settings
ADMIN_ALLOWED_IPS = ["*"]


# Superuser commands variables 
DJANGO_SUPERUSER_USERNAME =  env("DJANGO_SUPERUSER_USERNAME")
DJANGO_SUPERUSER_EMAIL =  env("DJANGO_SUPERUSER_EMAIL")
DJANGO_SUPERUSER_PASSWORD =  env("DJANGO_SUPERUSER_PASSWORD")

# Ensure CSRF works with your domain
CSRF_TRUSTED_ORIGINS = [
    'https://scalify.up.railway.app',
    'http://scalify.up.railway.app',  # Include HTTP version
    'https://*.railway.app',  # Wildcard for all railway subdomains
    'http://*.railway.app'
]

SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
